/*
 *Tämä on luokka, jossa on main-metoodi 
 *alusta tulee menu, joka kysyy, mitä käyttäjä halua tehdä (katsoa elokuvien listaa, tehdä varaus, lopeta) 
 * */

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class LipunVaraus{
	 
	public enum Paivat{
		Maanantai, Tiistai, Keskiviikko, Torstai, Perjantai, Lauantai, Sunnuntai
	}
	static Scanner scan = new Scanner(System.in);

	public static void main(String[] args) throws FileNotFoundException{ 
		System.out.println("Tervetuloa meidän varaus systeemiin!");
		/* Menu, joka kysyy, mitä käyttääjä halua tehdä
		 * se tulee takaisin kun osa on tehty*/
		
		while(true){
			scan = new Scanner(System.in);	
			System.out.println("\nJos haluat katsoa elokuvalistaa, syö 1");
	 		System.out.println("Jos haluat tehdä varaus, syö 2");
	 		System.out.println("Jos haluat lopeta, syö 3");
	 		try{
	 			int choise = scan.nextInt(); 
	 			if (choise == 1){
		 		 	ArrayList<Elokuva> elokuvat = new ArrayList<>();
		 		 	elokuvat = makeElokuva(); // luo elokuvalistan
		 			int index = 1; // joten lista alkaa numero 1:stä
		 			for (int i = 0; i < elokuvat.size(); i++){
		 		 	   System.out.println(index + ": " + elokuvat.get(i).annaElokuvanAika() + " '" + elokuvat.get(i).annaElokuvanNimi() + "' ") ;
		 		 	   index ++; 	   
		 			 }
		 			System.out.println("");
		 			continue; 
		 		}else if (choise == 2){
		 			String paiva = " ";	
		 		 	paiva = paivaValitus(); //Valitaan päivän, jolloin katsotaan elokuvaa
		 		 	ArrayList<Elokuva> elokuvat = new ArrayList<>();
		 			elokuvat = makeElokuva(); // creates the list of the movies
		 			Elokuva chosenElokuva = valitseElokuva(elokuvat); // valitse elokuvan elokuvalistasta
		 			ArrayList<Integer> istumaPaikka = new ArrayList<>();
		 			istumaPaikka = valitsePaikan(); // valitse istumapaikan
		 			Asiakas asiakas = uusiAsiakas(chosenElokuva);//luo uuden asiakkaan ja kirjoita sen tietoja tiedostoon
		 			Lippu lippu = new Lippu(asiakas.annaNimi(), asiakas.annaPuhelinnumero(), asiakas.annaSahkoposti(), chosenElokuva, istumaPaikka, paiva);
		 		}else if(choise == 3){
		 			System.out.println("Ohjelma on lopetettu");
					System.exit(1);
					continue;
		 		}
		 	}catch(Exception e){
		 			System.out.println("MISTAKE");
		 			continue;
	 		}
		}
	}
	 
	/*Tämä metoodi syö asiakkaan tietoja ja luo uuden asiakkaan
	 * @param Elokuva movie eli kaikkien elokuvien lista
	 * 
	 * */
	 
	 public static Asiakas uusiAsiakas(Elokuva leffa){		
		 		scan = new Scanner(System.in);	
		 		String asiakkaanNimi = " "; 
		 		String asiakkaanNumero = " "; 
		 		String asiakkaanPosti = " ";  
		 		System.out.println("\nNyt tarvitetaan tietoja. \nAnna sun Sukunimi ja Etunimi: ");
		 		asiakkaanNimi = scan.nextLine();
		 		System.out.println(asiakkaanNimi + ", kiitos. Nyt kitjoita sun puhelinnumerosi:");
		 		asiakkaanNumero = scan.nextLine();
		 	   	System.out.println("Kiitos! Ja myös sähköpostisi:");
		 	   	//sähköpostiosoitteessä pitää olla @
		 	   	asiakkaanPosti = null;  
		 	   	while (true){ 
		 		   asiakkaanPosti = scan.nextLine();
		 		   if (asiakkaanPosti.contains("@")){
		 			   break;
		 		   }else{
	     			   System.out.println("Väärin formatti. Kirjoita se taas (Yritä käyttää @)");
		 			   continue; 
		 		   }
		 	   }
		 		
		 	   System.out.print(asiakkaanNimi + ", ");
		 	   Asiakas asiakas = new Asiakas(asiakkaanNimi, asiakkaanNumero, asiakkaanPosti, leffa); //luo uusi asiakas
		 	   System.out.println("Kiitos varauksestasi!");
		 	   return asiakas;
	 }
	 
	/*
	 * @returns ArrayList<Elokuva>  elokuvalistan
	 * metoodi avaa listan elokuvista ja tekee ä arrayList.
	 * jos tiedosto ei löydy, silloin koko ohjelma sulkee
	 * */ 
	 
	 public static ArrayList<Elokuva> makeElokuva(){
		 ArrayList<Elokuva> elokuvat = new ArrayList<Elokuva>();    
			try{
				Scanner scanFile = new Scanner(new File("elokuvat.txt"));
				while(scanFile.hasNextLine()){
					String line = scanFile.nextLine();
					for (int i = 2; i < line.length(); i++){
						if (line.substring(i-2, i).equals("00")){
				    		String elokuvanNimi = line.substring(0, i);
				      		String elokuvanAika = line.substring(i+2, line.length()); 
				       		Elokuva leffa = new Elokuva(elokuvanAika, elokuvanNimi);
				       		elokuvat.add(leffa);
				       		break;
				       	}
					}       
				}  
			scanFile.close();
			}catch (Exception e){
			  System.out.println("Tiedosto ei löydy");
			  System.exit(1);
			}  
			return elokuvat;
		}  

	 /*@returns String paivaValitus, päivä,kun asiakas haluaa katsoa elokuvaa */
	 
	 public static String paivaValitus(){ 
		System.out.println("Hei! Milloin haluat katsoa elokuvaa? \n \nValitse päivä syömällä sen nimi tai index. Syö 0, jos haluat lopettaa");
		Paivat viikonpaiva = null; 
		while(true){
			scan = new Scanner(System.in);	
			int i = 1;
			for (Paivat paiva: Paivat.values()){
				System.out.print(i + " ");
				System.out.println(paiva);
				i++;	
			 }
			try{
			int s = scan.nextInt();  
				 if(s == 1){
			 		viikonpaiva = Paivat.Maanantai;
				}if(s == 2){
		 			viikonpaiva = Paivat.Tiistai;
				}if(s == 3){
					viikonpaiva = Paivat.Keskiviikko;
				}if(s == 4){
					 viikonpaiva = Paivat.Torstai; 
				}if(s == 5){
					 viikonpaiva = Paivat.Perjantai;
				}if(s == 6){
					viikonpaiva = Paivat.Lauantai;
				}if(s == 7){
					 viikonpaiva = Paivat.Sunnuntai; 
				}if(s == 0){
					 System.out.println("Ohjelma on lopetettu");
					 System.exit(1);
				}
			  }catch (Exception e){
						System.out.println("Virhe. Yritä uudelleen: ");
						continue; 
						
				}
				System.out.println("Olen valinnut päivä: " + viikonpaiva + ". Nyt valitse elouva: \n");
				return String.valueOf(viikonpaiva);	
		  } 
	}
    		 	
	 
	 /* @param ArrayList<Elokuva>elokuvat eli elokuvalista
	  * @returns Elokuva chosenMovie joka asiakais valitse 
	  * */
	
	 public static Elokuva valitseElokuva(ArrayList<Elokuva>elokuvat){ 
		 Elokuva chosenMovie = null;
		 for (int i = 0; i < elokuvat.size(); i++){
		 	   System.out.println(i+1 + ": " + elokuvat.get(i).annaElokuvanAika() + " '" + elokuvat.get(i).annaElokuvanNimi() + "' ") ;
		 	   }
		 try{
		
			 System.out.println("\nValitse elokuva syömällä sen indeksin. Syä 0 jos haluat lopettaa");
			 //elukuvan valitseminen
			 int movieNumber = scan.nextInt(); 
			 if(movieNumber == 0){
				 System.out.println("Ohjelma on lopetettu");
				 System.exit(1);
				}
			 else{
				 movieNumber-=1; 
			 }
			 chosenMovie = elokuvat.get(movieNumber); 		
			 System.out.println("Sinä olen valinnut elokuvan: '" + elokuvat.get(movieNumber).annaElokuvanNimi() + "' at " + elokuvat.get(movieNumber).annaElokuvanAika()); 
		 	  } catch (Exception e){
		 	     System.out.println("Virhe: " + e.getMessage());
		 	  		 	      	   
		 	  }	 

		 return chosenMovie; 
		 }
	 
	 /*
	  * @returns ArrayList<Integer>istumaPaikka valittu paikka 
	  * paikassa on valittu riivi ja paikka
	  * */
	 public static ArrayList<Integer> valitsePaikan(){ 		 	  		 	   
			ArrayList<Integer> istumaPaikka = new ArrayList<>();
			while(true){	
				System.out.println("Nyt voit valita riivi: 1-12");
				int riivi = scan.nextInt();
				if (riivi < 0 || riivi > 12){ 
					System.out.println("Tämä on väärin numero. Valitse uudelleen");
				 	continue;
				 }else{
				 	System.out.println("Ja paikan: 1 - 32");  
				 	int  paikka = scan.nextInt();
				 	if (paikka < 0 || paikka > 33){ 
				 		System.out.println("Tämä on väärin numero. Valitse uudelleen");
				 		continue;
				 		}else{
				 			System.out.println("Sinun paikkasi on: "  + "riivi " + riivi + ", paikka " + paikka); 
				 			istumaPaikka.add(riivi);
				 		 	istumaPaikka.add(paikka);
				 			break; 	
				 		}
				 }
			}
		
			return istumaPaikka;
	 }
}

